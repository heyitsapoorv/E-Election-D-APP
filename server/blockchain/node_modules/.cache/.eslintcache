[{"C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\index.js":"1","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\App.js":"2","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\serviceWorker.js":"3","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\NewElection.js":"4","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Vote.js":"5","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Navbar.js":"6","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\ElectionData.js":"7","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\VoteCount.js":"8","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\NewCandidate.js":"9","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Login.js":"10","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\AdminPannel.js":"11","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Home.js":"12","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Choose.js":"13","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\About.js":"14","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\index.js":"15","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\App.js":"16","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\serviceWorker.js":"17","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\NewElection.js":"18","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Navbar.js":"19","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Vote.js":"20","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Home.js":"21","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\About.js":"22","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\VoteCount.js":"23","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\NewCandidate.js":"24","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\AdminPannel.js":"25","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\ElectionData.js":"26","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Login.js":"27","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Choose.js":"28"},{"size":503,"mtime":1624520363000,"results":"29","hashOfConfig":"30"},{"size":1684,"mtime":1624805676532,"results":"31","hashOfConfig":"30"},{"size":5086,"mtime":1624520363000,"results":"32","hashOfConfig":"30"},{"size":2587,"mtime":1624799954914,"results":"33","hashOfConfig":"30"},{"size":4308,"mtime":1624800780850,"results":"34","hashOfConfig":"30"},{"size":1210,"mtime":1624812054834,"results":"35","hashOfConfig":"30"},{"size":3024,"mtime":1624801381364,"results":"36","hashOfConfig":"30"},{"size":4154,"mtime":1624799560192,"results":"37","hashOfConfig":"30"},{"size":3915,"mtime":1624801241811,"results":"38","hashOfConfig":"30"},{"size":2503,"mtime":1624795365015,"results":"39","hashOfConfig":"30"},{"size":1436,"mtime":1624799920426,"results":"40","hashOfConfig":"30"},{"size":2738,"mtime":1624870031562,"results":"41","hashOfConfig":"30"},{"size":2398,"mtime":1624800350302,"results":"42","hashOfConfig":"30"},{"size":1247,"mtime":1624869201626,"results":"43","hashOfConfig":"30"},{"size":520,"mtime":1624973562289,"results":"44","hashOfConfig":"45"},{"size":1726,"mtime":1624973562253,"results":"46","hashOfConfig":"45"},{"size":5227,"mtime":1624973562291,"results":"47","hashOfConfig":"45"},{"size":2661,"mtime":1624973562281,"results":"48","hashOfConfig":"45"},{"size":1248,"mtime":1624973562278,"results":"49","hashOfConfig":"45"},{"size":4442,"mtime":1624973562282,"results":"50","hashOfConfig":"45"},{"size":2832,"mtime":1624973562275,"results":"51","hashOfConfig":"45"},{"size":1247,"mtime":1624973562270,"results":"52","hashOfConfig":"45"},{"size":4288,"mtime":1624973562284,"results":"53","hashOfConfig":"45"},{"size":4047,"mtime":1624973562280,"results":"54","hashOfConfig":"45"},{"size":1474,"mtime":1624973562271,"results":"55","hashOfConfig":"45"},{"size":3121,"mtime":1624973562273,"results":"56","hashOfConfig":"45"},{"size":2584,"mtime":1624973562276,"results":"57","hashOfConfig":"45"},{"size":2481,"mtime":1624973562272,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p0u0mg",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t3noxi",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\index.js",[],"C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\App.js",[],"C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\serviceWorker.js",[],"C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\NewElection.js",["126"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\n\nclass NewElection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: '',\n            election_organizer: '',\n            election_password: '',\n        };\n    }\n\n    handleInputChange = e => {\n        this.setState({\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { election_name, election_organizer, election_password } = this.state;\n        console.log(election_name);\n        axios.post('http://localhost:8000/api/electionName', {\n            election_name: election_name,\n            election_organizer: election_organizer,\n            election_password: election_password\n        })\n        .then(function(response){ \n            window.location.assign('/adminPannel');\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n    }\n\n    render(){\n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\">Create New Election</h1>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <label htmlFor=\"name\" >Election Name</label><br />\n                        <input type=\"text\" id=\"election_name\" name=\"election_name\" placeholder=\"Name\" onChange={this.handleInputChange} required/>\n                        <br></br>\n                        <label htmlFor=\"name\" >Election Organizer</label>\n                        <input type=\"text\" id=\"election_organizer\" name=\"election_organizer\" placeholder=\"Organizer's Name\" onChange={this.handleInputChange} required/>\n                        <br></br>\n                        <label htmlFor=\"name\" >Election Password</label>\n                        <input type=\"password\" id=\"election_password\" name=\"election_password\" placeholder=\"Password \"onChange={this.handleInputChange} required/>\n                        <br></br><br></br>\n                        <button className=\"btn btn-warning \" type=\"submit\" name=\"action\" >Submit\n                        </button>\n                    </form>\n                    </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default NewElection;\n","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Vote.js",["127","128","129"],"import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\nclass Vote extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id} >\n                    <li className=\"collection-item avatar\" >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>Name of the Candidate : {candidates.name}</b></p>\n                        <p><b>Name of the Party : {candidates.details}</b></p>\n                        <a href=\"\" className=\"secondary-content\"><button id={candidates.id} onClick={this.handleInputChange}  class=\"btn btn-warning \">Vote</button></a>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n            <div className=\"container\" > \n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar \">\n                        <h3>Candidates</h3>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n            </div>\n              </div>\n              {/* <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div> */}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Vote;","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Navbar.js",["130","131","132"],"import React, { Component } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\n\nclass Navbar extends Component {\n    state = {\n        location: \"\"\n    }\n\n    componentWillReceiveProps(){\n        console.log(this.props)\n        this.setState({\n            location: this.props.history.location.pathname\n        })\n    }\n    render(){\n\n        return (\n            <div id=\"top-bar\">\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a class=\"navbar-brand\" href=\"#\">\n                <img src=\"favicon.ico\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\"/>E-Election</a>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\"><NavLink to=\"/\">Home </NavLink></a>\n                    </li>\n                    <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\"><NavLink to=\"/About\">About</NavLink></a>\n                    </li>\n\n                </ul>\n                </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\ElectionData.js",["133"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n\n\nclass ElectionData extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('http://localhost:8000/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                // election_name: data[0],\n                // election_organizer: data[1],\n                // election_id: data[2],\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id} class=\"container\" >\n                    <li >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>{election.election_name}</b></p>\n                        <Link to={\"/candidates/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id} class=\"btn btn-warning \" >Add Candidate</button></Link>\n<br />\n<br />\n                        <Link to={\"/voteCount/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id}  class=\"btn btn-warning \">View Vote Count</button></Link>\n                    </li>\n                    <br />\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n            {/* <div className=\"container\"> */}\n                <ul className=\"collection\">\n                    {/* <li className=\"collection-item avatar\" style ={divStyle}> */}\n                        <h3>Elections</h3>\n                    {/* </li> */}\n                        {electionList}\n                </ul>\n            {/* </div> */}\n            </div>\n            </div>\n            <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n              <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n            </div>\n          </div>\n        </div>\n        )\n    }\n}\n\nexport default ElectionData;\n","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\VoteCount.js",["134","135"],"import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\nclass VoteCount extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id}>\n                    <li className=\"collection-item avatar\" >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>Candidate Name : {candidates.name}</b></p>\n                        <p><b>Party Name : {candidates.details}</b></p>\n                        <p className=\"secondary-content\"><b>Votes : {candidates.voteCount}</b></p>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  {/* <h1 class=\"login-title\">Create New Election</h1> */}\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\" >\n                        <p className=\"title\">Candidates</p>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n            </div>\n            </div>\n\n          </div>\n        </div>\n        )\n    }\n}\n\nexport default VoteCount;","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\NewCandidate.js",["136","137","138","139"],"import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\n\nconst myStryle ={\n    color:\"black\",\n    marginLeft:\"20px\",\n}\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\n\nconst buttonStyle ={\n    marginLeft:\"20px\",\n    marginBottom:\"10px\",\n    borderRadius:\"10px\"\n}\n\nclass NewCandidate extends Component{\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockChain()\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n    \n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    async loadBlockChain(){\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.addCandidates();\n    }\n    \n    addCandidates() {\n        console.log(this.state);\n        this.setState({ loading: true })\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n          this.setState({ loading: false })\n          window.location.assign(\"/elections\");\n        })\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '',\n          election: null,\n          candidate_name: null,\n          candidate_details: null,\n          id: null\n        }\n        this.addCandidates = this.addCandidates.bind(this)\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    render(){\n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\">Add New Candidate</h1>\n            {/* <div className=\"container\" style={divStyle}> */}\n                <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"name\" >Candidate Name</label><br></br>\n                    <input type=\"text\" id=\"candidate_name\" name=\"candidate_name\" placeholder=\"Name\" onChange={this.handleInputChange} required/>\n                    <br />\n                    <label htmlFor=\"name\">Candidate details</label>\n                    <br />\n                    <input type=\"text\" id=\"candidate_details\" name=\"candidate_details\" placeholder=\"Party Name\" onChange={this.handleInputChange} required/>\n                    <br />\n                    <br />\n                    <button  class=\"btn btn-warning \" type=\"submit\" name=\"action\">Submit\n\n                    </button>\n                </form>\n                        </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default NewCandidate;\n","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Login.js",["140","141","142","143"],"import React, { Component } from 'react'\nimport axios from 'axios'\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'username': null,\n            'password': null\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        console.log(username);\n        console.log(password);\n        // axios.post('http://localhost:8000/api/adminLogin', {\n        //     username: username,\n        //     password: password,\n        // })\n        // .then(function(response){ \n        //     if(response.data){\n        //         window.location.assign(\"/newelection\")\n        //     }else{\n        //         alert('Incorrect Username or Password');\n        //     }\n        // })\n        // .catch(function(err){\n        //     console.error(err);\n        // });\n        if(username ==\"Lakshit\" && password ==\"Lakshit\"){\n            window.location.assign(\"/adminPannel\");\n        }\n\n        else{\n            alert('Incorrect username and password');\n        }\n    }\n\n\n    render(){\n        return(\n\n        <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6 login-section-wrapper\">\n                        <div class=\"login-wrapper my-auto\">\n                            <h1 class=\"login-title\">Log in</h1>\n                            <form onSubmit={this.handleSubmit}>\n              <div class=\"form-group\">\n                <label htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter Username\" onChange={this.handleInputChange}required />\n              </div>\n              <div class=\"form-group mb-4\">\n                <label htmlFor=\"name\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" placeholder=\" Enter Password\"  onChange={this.handleInputChange}required />\n              </div>\n               <button class=\"btn btn-warning \" type=\"submit\" name=\"action\">Login</button>\n            </form>\n          </div>\n        </div>\n                <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n                </div>\n       </div>\n      </div>\n        )\n\n    }\n}\n\nexport default Login;\n","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\AdminPannel.js",["144"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\n\n\n\nclass AdminPannel extends Component {\n    render(){\n\n        return (\n\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  {/* <h1 class=\"login-title\"></h1> */}\n                  <ul>\n                  <Link to={\"/newElection\"} className=\"title\" ><button  class=\"btn btn-warning btn-lg \">Add New Election</button></Link>\n                  <br />\n                  <br />\n                  <Link to={\"/elections\"} className=\"title\" ><button  class=\"btn btn-warning btn-lg\">Election List</button></Link>\n\n                  {/* <li className=\"collection-item\" ><h4 >Add New Election       <Link to=\"/newElection\" className=\"secondary-content\"><i className=\"material-icons\">send</i></Link></h4></li>\n                  <li className=\"collection-item\" ><h4 >Election List                <Link to=\"/elections\" className=\"secondary-content\"><i className=\"material-icons\">send</i></Link></h4></li> */}\n\n                  </ul>\n                </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AdminPannel;","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Home.js",["145","146","147"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// window.onload = function () {\n//     /* Cache the popup. */\n//     var popup = document.getElementById(\"popup\");\n\n//     /* Show the popup. */\n//     popup.classList.remove(\"hidden\");\n//     /* Fade the popup in */\n\n//     setTimeout(()=>popup.classList.add(\"fade-in\"));\n//     /* Close the popup when a city is selected. */\n\n//     document.getElementById(\"close\").onclick = function () {\n\n//        /* Fade the popup out */\n//        popup.classList.remove(\"fade-in\");\n\n//        /* Hide the popup. */\n\n//        setTimeout(()=>popup.classList.add(\"hidden\"), 300);\n\n//     };\n\n//   };\n\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {value: 'Choose'};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) \n    {\n      this.setState({value: event.target.value});\n    }\n    handleSubmit(event)\n    {\n          // event.preventDefault()\n          if(this.state.value=='Choose')\n          {\n          this.props.history.push('/Choose');\n          event.preventDefault();\n          }\n          else{\n               this.props.history.push('/Login');\n               event.preventDefault();\n              }\n    }\n\n\n\n\n\n    render(){\n        return (\n\n\n        <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6 login-section-wrapper\">\n                        <div class=\"login-wrapper my-auto\">\n                            <h1 class=\"login-title\">Choose Below</h1>\n                 <form onSubmit={this.handleSubmit}>\n                     <div class=\"form-group\"  >\n                             <label>\n                               The type of User  :\n                              </label>\n                              <br />\n                              <select  class=\"form-control form-control-lg\" value={this.state.value} onChange={this.handleChange}>\n                                  <option value=\"Choose\" >Voter</option>\n                              <option value=\"Login\" >Admin</option>\n                         </select>\n                         <br />\n                        <button type=\"submit\" class=\"btn btn-warning \" onClick={this.props.onSubmit} >Submit</button>\n                     </div>\n                 </form>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                        <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\" />\n\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Home","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\Choose.js",["148"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Choose extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('http://localhost:8000/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        // console.log(e.target.innerHTML);\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id}>\n                    <li className=\"collection-item avatar\">\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <Link to={\"/vote/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}>{election.election_name}</Link>\n                    </li>\n                </div>\n\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\"> Ongoing Elections </h1>\n                <ul className=\"collection\">\n                        {electionList}\n                </ul>\n                </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Choose;","C:\\Users\\DELL\\Downloads\\e-voting-Machine-using-blockchain-main\\blockchain\\src\\components\\custom\\About.js",["149","150"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass About extends Component {\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n                   <div class=\"about-wrapper\">\r\n                   <h1 ><b>  About</b></h1>\r\n                   <h6><b>E-Voting DApp(Decentralized Application)</b> <br />\r\n\r\n                    This is a simple E-voting Decentralized App using the Ethereum Blockchain, Solidity and the <b>MERN(MongoDB, Express.js, ReactJS, Node.js)</b> stack\r\n</h6>\r\n<img src=\"https://miro.medium.com/max/16000/1*AReX8uZOZKpGcvuUjogh0g.png\" height=\"100px\" width=\"160px\"/>\r\n\r\n<h6>\r\n<b>Ethereum</b> is an open source, public, blockchain-based distributed computing platform and operating system featuring smart contract functionality.\r\n</h6>\r\n<h6>\r\nAbout the D-App \r\n<br/>\r\nThe E-Voting app has 2 main users:<br/>\r\n<br/>\r\n<b>1. Admin </b><br/>\r\nAdmin can create an election and add candidates to the Ethereum Blockchain.\r\n<br />\r\n<b>2. Voter</b>\r\n<br/>\r\nVoters can select an election and vote for a candidate of their choice.\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n</h6>\r\n<img  src=\"apoorv.jpg\" alt=\"\" widht=\"100px\" height=\"500px\" class=\"center\"/>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\App.js",[],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\serviceWorker.js",[],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\NewElection.js",["151"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Navbar.js",["152","153","154"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Vote.js",["155","156","157"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Home.js",["158","159","160"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\About.js",["161","162"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\VoteCount.js",["163","164"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\NewCandidate.js",["165","166","167","168"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\AdminPannel.js",["169"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\ElectionData.js",["170"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Login.js",["171","172","173","174"],"C:\\Users\\DELL\\Desktop\\E-Election-DAPP\\blockchain\\src\\components\\custom\\Choose.js",["175"],{"ruleId":"176","severity":1,"message":"177","line":66,"column":17,"nodeType":"178","endLine":66,"endColumn":75},{"ruleId":"179","severity":1,"message":"180","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":6,"column":7,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":105,"column":25,"nodeType":"178","endLine":105,"endColumn":66},{"ruleId":"184","severity":1,"message":"185","line":20,"column":17,"nodeType":"178","endLine":20,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":25,"column":21,"nodeType":"178","endLine":25,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":28,"column":21,"nodeType":"178","endLine":28,"endColumn":50},{"ruleId":"176","severity":1,"message":"177","line":89,"column":15,"nodeType":"178","endLine":89,"endColumn":73},{"ruleId":"179","severity":1,"message":"180","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":7,"column":7,"nodeType":"181","messageId":"182","endLine":7,"endColumn":15},{"ruleId":"179","severity":1,"message":"186","line":5,"column":7,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"183","line":10,"column":7,"nodeType":"181","messageId":"182","endLine":10,"endColumn":15},{"ruleId":"179","severity":1,"message":"187","line":17,"column":7,"nodeType":"181","messageId":"182","endLine":17,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":124,"column":17,"nodeType":"178","endLine":124,"endColumn":75},{"ruleId":"179","severity":1,"message":"188","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":40,"column":21,"nodeType":"191","messageId":"192","endLine":40,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":40,"column":45,"nodeType":"191","messageId":"192","endLine":40,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":72,"column":17,"nodeType":"178","endLine":72,"endColumn":75},{"ruleId":"176","severity":1,"message":"177","line":31,"column":17,"nodeType":"178","endLine":31,"endColumn":75},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":44,"column":30,"nodeType":"191","messageId":"192","endLine":44,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":85,"column":25,"nodeType":"178","endLine":85,"endColumn":84},{"ruleId":"176","severity":1,"message":"177","line":76,"column":17,"nodeType":"178","endLine":76,"endColumn":75},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":19,"column":1,"nodeType":"178","endLine":19,"endColumn":105},{"ruleId":"176","severity":1,"message":"177","line":66,"column":17,"nodeType":"178","endLine":66,"endColumn":75},{"ruleId":"184","severity":1,"message":"185","line":20,"column":17,"nodeType":"178","endLine":20,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":25,"column":21,"nodeType":"178","endLine":25,"endColumn":50},{"ruleId":"184","severity":1,"message":"185","line":28,"column":21,"nodeType":"178","endLine":28,"endColumn":50},{"ruleId":"179","severity":1,"message":"180","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":6,"column":7,"nodeType":"181","messageId":"182","endLine":6,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":105,"column":25,"nodeType":"178","endLine":105,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":44,"column":30,"nodeType":"191","messageId":"192","endLine":44,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":85,"column":25,"nodeType":"178","endLine":85,"endColumn":84},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"193","severity":1,"message":"194","line":19,"column":1,"nodeType":"178","endLine":19,"endColumn":105},{"ruleId":"179","severity":1,"message":"180","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":7,"column":7,"nodeType":"181","messageId":"182","endLine":7,"endColumn":15},{"ruleId":"179","severity":1,"message":"186","line":5,"column":7,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"183","line":10,"column":7,"nodeType":"181","messageId":"182","endLine":10,"endColumn":15},{"ruleId":"179","severity":1,"message":"187","line":17,"column":7,"nodeType":"181","messageId":"182","endLine":17,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":124,"column":17,"nodeType":"178","endLine":124,"endColumn":75},{"ruleId":"176","severity":1,"message":"177","line":31,"column":17,"nodeType":"178","endLine":31,"endColumn":75},{"ruleId":"176","severity":1,"message":"177","line":89,"column":15,"nodeType":"178","endLine":89,"endColumn":73},{"ruleId":"179","severity":1,"message":"188","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":40,"column":21,"nodeType":"191","messageId":"192","endLine":40,"endColumn":23},{"ruleId":"189","severity":1,"message":"190","line":40,"column":45,"nodeType":"191","messageId":"192","endLine":40,"endColumn":47},{"ruleId":"176","severity":1,"message":"177","line":72,"column":17,"nodeType":"178","endLine":72,"endColumn":75},{"ruleId":"176","severity":1,"message":"177","line":76,"column":17,"nodeType":"178","endLine":76,"endColumn":75},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'divStyle' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'myStryle' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]