{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\e-voting-Machine-using-blockchain-main\\\\blockchain\\\\src\\\\components\\\\custom\\\\NewCandidate.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json';\nconst myStryle = {\n  color: \"black\",\n  marginLeft: \"20px\"\n};\nconst divStyle = {\n  backgroundColor: \"lightblue\",\n  marginTop: \"10px\",\n  borderRadius: \"10px\"\n};\nconst buttonStyle = {\n  marginLeft: \"20px\",\n  marginBottom: \"10px\",\n  borderRadius: \"10px\"\n};\n\nclass NewCandidate extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockChain();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockChain() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Election.networks[networkId];\n\n    if (networkData) {\n      const election = new web3.eth.Contract(Election.abi, networkData.address);\n      this.setState({\n        election\n      });\n    } else {\n      window.alert('Election contract not deployed to detected network.');\n    }\n  }\n\n  addCandidates() {\n    console.log(this.state);\n    this.setState({\n      loading: true\n    });\n    this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n      this.setState({\n        loading: false\n      });\n      window.location.assign(\"/elections\");\n    });\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.addCandidates();\n    };\n\n    this.state = {\n      account: '',\n      election: null,\n      candidate_name: null,\n      candidate_details: null,\n      id: null\n    };\n    this.addCandidates = this.addCandidates.bind(this);\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm-6 login-section-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"login-wrapper my-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"login-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, \"Add New Candidate\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      style: myStryle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Candidate Name\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"candidate_name\",\n      name: \"candidate_name\",\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      style: myStryle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Candidate details\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"candidate_details\",\n      name: \"candidate_details\",\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-warning \",\n      type: \"submit\",\n      name: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm-6 px-0 d-none d-sm-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"login.jpg\",\n      alt: \"login image\",\n      class: \"login-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n}\n\nexport default NewCandidate;","map":{"version":3,"sources":["C:/Users/DELL/Downloads/e-voting-Machine-using-blockchain-main/blockchain/src/components/custom/NewCandidate.js"],"names":["React","Component","Web3","Election","myStryle","color","marginLeft","divStyle","backgroundColor","marginTop","borderRadius","buttonStyle","marginBottom","NewCandidate","componentWillMount","loadWeb3","loadBlockChain","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","election","Contract","abi","address","addCandidates","console","log","state","loading","methods","addCandidate","candidate_name","candidate_details","id","send","from","once","receipt","location","assign","constructor","props","handleInputChange","e","target","value","handleSubmit","preventDefault","bind","componentDidMount","match","params","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\n\nconst myStryle ={\n    color:\"black\",\n    marginLeft:\"20px\",\n}\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\n\nconst buttonStyle ={\n    marginLeft:\"20px\",\n    marginBottom:\"10px\",\n    borderRadius:\"10px\"\n}\n\nclass NewCandidate extends Component{\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockChain()\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n    \n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    async loadBlockChain(){\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.addCandidates();\n    }\n    \n    addCandidates() {\n        console.log(this.state);\n        this.setState({ loading: true })\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n          this.setState({ loading: false })\n          window.location.assign(\"/elections\");\n        })\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '',\n          election: null,\n          candidate_name: null,\n          candidate_details: null,\n          id: null\n        }\n        this.addCandidates = this.addCandidates.bind(this)\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    render(){\n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\">Add New Candidate</h1>\n            {/* <div className=\"container\" style={divStyle}> */}\n                <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"name\" style={myStryle}>Candidate Name</label><br></br>\n                    <input type=\"text\" id=\"candidate_name\" name=\"candidate_name\" onChange={this.handleInputChange} required/>\n                    <label htmlFor=\"name\" style={myStryle}>Candidate details</label><br></br>\n                    <input type=\"text\" id=\"candidate_details\" name=\"candidate_details\" onChange={this.handleInputChange} required/>\n                    <br />\n                    <br />\n                    <button  class=\"btn btn-warning \" type=\"submit\" name=\"action\">Submit\n                        \n                    </button>\n                </form>\n                        </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default NewCandidate;\n"]},"metadata":{},"sourceType":"module"}