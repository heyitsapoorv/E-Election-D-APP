{"version":3,"sources":["components/custom/NewElection.js","components/custom/Navbar.js","components/custom/Home.js","components/custom/Vote.js","components/custom/About.js","components/custom/VoteCount.js","components/custom/ElectionData.js","components/custom/Choose.js","components/custom/NewCandidate.js","components/custom/Login.js","components/custom/AdminPannel.js","App.js","serviceWorker.js","index.js"],"names":["NewElection","props","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","state","election_name","election_organizer","election_password","console","log","axios","post","then","response","window","location","assign","catch","err","error","class","onSubmit","this","htmlFor","type","id","placeholder","onChange","required","className","src","alt","Component","Navbar","history","pathname","href","width","height","to","withRouter","Home","handleChange","bind","event","push","onClick","Vote","selectedId","vote","account","election","candCount","candidates","loading","a","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","Election","networks","Contract","abi","address","methods","candidatesCount","call","i","election_id","send","from","once","receipt","match","params","electionList","map","key","details","About","widht","VoteCount","voteCount","ElectionData","innerHTML","index","length","final","currentComponent","get","data","Choose","NewCandidate","addCandidates","candidate_name","candidate_details","loadBlockChain","addCandidate","Login","username","password","AdminPannel","App","getVal","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b41b46e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\n\nclass NewElection extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: '',\n            election_organizer: '',\n            election_password: '',\n        };\n    }\n\n    handleInputChange = e => {\n        this.setState({\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { election_name, election_organizer, election_password } = this.state;\n        console.log(election_name);\n        axios.post('http://localhost:8000/api/electionName', {\n            election_name: election_name,\n            election_organizer: election_organizer,\n            election_password: election_password\n        })\n        .then(function(response){ \n            window.location.assign('/adminPannel');\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n    }\n\n    render(){\n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\">Create New Election</h1>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <label htmlFor=\"name\" >Election Name</label><br />\n                        <input type=\"text\" id=\"election_name\" name=\"election_name\" placeholder=\"Name\" onChange={this.handleInputChange} required/>\n                        <br></br>\n                        <label htmlFor=\"name\" >Election Organizer</label>\n                        <input type=\"text\" id=\"election_organizer\" name=\"election_organizer\" placeholder=\"Organizer's Name\" onChange={this.handleInputChange} required/>\n                        <br></br>\n                        <label htmlFor=\"name\" >Election Password</label>\n                        <input type=\"password\" id=\"election_password\" name=\"election_password\" placeholder=\"Password \"onChange={this.handleInputChange} required/>\n                        <br></br><br></br>\n                        <button className=\"btn btn-warning \" type=\"submit\" name=\"action\" >Submit\n                        </button>\n                    </form>\n                    </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default NewElection;\n","import React, { Component } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\n\nclass Navbar extends Component {\n    state = {\n        location: \"\"\n    }\n\n    componentWillReceiveProps(){\n        console.log(this.props)\n        this.setState({\n            location: this.props.history.location.pathname\n        })\n    }\n    render(){\n\n        return (\n            <div id=\"top-bar\">\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <a class=\"navbar-brand\" href=\"#\">\n                <img src=\"favicon.ico\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\"/>E-Election</a>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\"><NavLink to=\"/\">Home </NavLink></a>\n                    </li>\n                    <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\"><NavLink to=\"/About\">About</NavLink></a>\n                    </li>\n\n                </ul>\n                </div>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Navbar)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// window.onload = function () {\n//     /* Cache the popup. */\n//     var popup = document.getElementById(\"popup\");\n\n//     /* Show the popup. */\n//     popup.classList.remove(\"hidden\");\n//     /* Fade the popup in */\n\n//     setTimeout(()=>popup.classList.add(\"fade-in\"));\n//     /* Close the popup when a city is selected. */\n\n//     document.getElementById(\"close\").onclick = function () {\n\n//        /* Fade the popup out */\n//        popup.classList.remove(\"fade-in\");\n\n//        /* Hide the popup. */\n\n//        setTimeout(()=>popup.classList.add(\"hidden\"), 300);\n\n//     };\n\n//   };\n\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {value: 'Choose'};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange(event) \n    {\n      this.setState({value: event.target.value});\n    }\n    handleSubmit(event)\n    {\n          // event.preventDefault()\n          if(this.state.value=='Choose')\n          {\n          this.props.history.push('/Choose');\n          event.preventDefault();\n          }\n          else{\n               this.props.history.push('/Login');\n               event.preventDefault();\n              }\n    }\n\n\n\n\n\n    render(){\n        return (\n\n\n        <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6 login-section-wrapper\">\n                        <div class=\"login-wrapper my-auto\">\n                            <h1 class=\"login-title\">Choose Below</h1>\n                 <form onSubmit={this.handleSubmit}>\n                     <div class=\"form-group\"  >\n                             <label>\n                               The type of User  :\n                              </label>\n                              <br />\n                              <select  class=\"form-control form-control-lg\" value={this.state.value} onChange={this.handleChange}>\n                                  <option value=\"Choose\" >Voter</option>\n                              <option value=\"Login\" >Admin</option>\n                         </select>\n                         <br />\n                        <button type=\"submit\" class=\"btn btn-warning \" onClick={this.props.onSubmit} >Submit</button>\n                     </div>\n                 </form>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                        <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\" />\n\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\nclass Vote extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id} >\n                    <li className=\"collection-item avatar\" >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>Name of the Candidate : {candidates.name}</b></p>\n                        <p><b>Name of the Party : {candidates.details}</b></p>\n                        <a href=\"\" className=\"secondary-content\"><button id={candidates.id} onClick={this.handleInputChange}  class=\"btn btn-warning \">Vote</button></a>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n            <div className=\"container\" > \n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar \">\n                        <h3>Candidates</h3>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n            </div>\n              </div>\n              {/* <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div> */}\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Vote;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass About extends Component {\r\n\r\n\r\n\r\n    render(){\r\n        return (\r\n                   <div class=\"about-wrapper\">\r\n                   <h1 ><b>  About</b></h1>\r\n                   <h6><b>E-Voting DApp(Decentralized Application)</b> <br />\r\n\r\n                    This is a simple E-voting Decentralized App using the Ethereum Blockchain, Solidity and the <b>MERN(MongoDB, Express.js, ReactJS, Node.js)</b> stack\r\n</h6>\r\n<img src=\"https://miro.medium.com/max/16000/1*AReX8uZOZKpGcvuUjogh0g.png\" height=\"100px\" width=\"160px\"/>\r\n\r\n<h6>\r\n<b>Ethereum</b> is an open source, public, blockchain-based distributed computing platform and operating system featuring smart contract functionality.\r\n</h6>\r\n<h6>\r\nAbout the D-App \r\n<br/>\r\nThe E-Voting app has 2 main users:<br/>\r\n<br/>\r\n<b>1. Admin </b><br/>\r\nAdmin can create an election and add candidates to the Ethereum Blockchain.\r\n<br />\r\n<b>2. Voter</b>\r\n<br/>\r\nVoters can select an election and vote for a candidate of their choice.\r\n\r\n\r\n<br></br>\r\n<br></br>\r\n\r\n</h6>\r\n<img  src=\"apoorv.jpg\" alt=\"\" widht=\"100px\" height=\"500px\" class=\"center\"/>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\nimport { Link } from 'react-router-dom'\n\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\nclass VoteCount extends Component {\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n      }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n\n    async loadBlockchainData() {\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        console.log(accounts)\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n            const candCount = await election.methods.candidatesCount().call()\n            this.setState({ candCount })\n            for (var i = 1; i <= candCount; i++) {\n                const candidates = await election.methods.candidates(i).call()\n                if(candidates.election_id === this.state.id){\n                    this.setState({\n                        candidates: [...this.state.candidates, candidates]\n                    })\n                }\n            }\n            console.log(this.state.candidates)\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleInputChange = (e) => {\n        console.log(e.target.id)\n        this.setState({\n            selectedId: e.target.id,\n        })\n        this.vote(e.target.id);\n    }\n\n\n    vote(id) {\n        console.log(this.state.selectedId)\n        this.setState({ loading: true })\n        this.state.election.methods.vote(id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            this.setState({ loading: false })\n            window.location.assign(\"/\");\n        })\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: null,\n            account: '',\n            election: null,\n            candCount: 0,\n            candidates: [],\n            loading: true,\n            selectedId: null\n        }\n    }\n\n    render(){\n        const electionList = this.state.candidates.map(candidates => {\n            return (\n                <div className=\"contact\" key={candidates.id}>\n                    <li className=\"collection-item avatar\" >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>Candidate Name : {candidates.name}</b></p>\n                        <p><b>Party Name : {candidates.details}</b></p>\n                        <p className=\"secondary-content\"><b>Votes : {candidates.voteCount}</b></p>\n                    </li>\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  {/* <h1 class=\"login-title\">Create New Election</h1> */}\n            <div className=\"container\">\n                <ul className=\"collection\">\n                    <li className=\"collection-item avatar\" >\n                        <p className=\"title\">Candidates</p>\n                    </li>\n                        {electionList}\n                </ul>\n            </div>\n            </div>\n            </div>\n\n          </div>\n        </div>\n        )\n    }\n}\n\nexport default VoteCount;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n\n\nclass ElectionData extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('http://localhost:8000/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                // election_name: data[0],\n                // election_organizer: data[1],\n                // election_id: data[2],\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id} class=\"container\" >\n                    <li >\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <p><b>{election.election_name}</b></p>\n                        <Link to={\"/candidates/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id} class=\"btn btn-warning \" >Add Candidate</button></Link>\n<br />\n<br />\n                        <Link to={\"/voteCount/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}><button id={election.election_id}  class=\"btn btn-warning \">View Vote Count</button></Link>\n                    </li>\n                    <br />\n                </div>\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n            {/* <div className=\"container\"> */}\n                <ul className=\"collection\">\n                    {/* <li className=\"collection-item avatar\" style ={divStyle}> */}\n                        <h3>Elections</h3>\n                    {/* </li> */}\n                        {electionList}\n                </ul>\n            {/* </div> */}\n            </div>\n            </div>\n            <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n              <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n            </div>\n          </div>\n        </div>\n        )\n    }\n}\n\nexport default ElectionData;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Choose extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            election_name: [],\n            election_organizer: [],\n            election_id: [],\n            final: [],\n            id: null,\n        };\n    }\n\n    componentDidMount(){\n        let currentComponent = this;\n      \n        axios.get('http://localhost:8000/api/electionName', {})\n        .then(function(response){ \n            var data = response.data;\n            currentComponent.setState({\n                final: data\n            })\n        })\n        .catch(function(err){\n            console.error(err);\n        });\n\n    }\n\n    handleInputChange = (e) => {\n        // console.log(e.target.innerHTML);\n        var name = e.target.innerHTML;\n        var index = 0;\n        for(let i = 0; i < this.state.election_name.length; i++){\n            if(name === this.state.election_name[i]){\n                index = i;\n                break;\n            }\n        }\n        var id = this.state.election_id[index];\n        this.setState({\n            id : id\n        })\n    };\n\n\n    render(){\n        const electionList = this.state.final.map(election => {\n            return (\n                <div className=\"contact\" key={election.election_id}>\n                    <li className=\"collection-item avatar\">\n                        {/* <i className=\"material-icons circle blue darken-2\">ballot</i> */}\n                        <Link to={\"/vote/\" + election.election_id} className=\"title\" onClick={this.handleInputChange}>{election.election_name}</Link>\n                    </li>\n                </div>\n\n            )\n        }) \n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\"> Ongoing Elections </h1>\n                <ul className=\"collection\">\n                        {electionList}\n                </ul>\n                </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Choose;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Election from '../../build/Election.json'\n\nconst myStryle ={\n    color:\"black\",\n    marginLeft:\"20px\",\n}\n\nconst divStyle = {\n    backgroundColor:\"lightblue\" ,\n    marginTop :\"10px\", \n    borderRadius:\"10px\"\n}\n\n\nconst buttonStyle ={\n    marginLeft:\"20px\",\n    marginBottom:\"10px\",\n    borderRadius:\"10px\"\n}\n\nclass NewCandidate extends Component{\n\n    async componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockChain()\n    }\n    \n    async loadWeb3() {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n        }\n    }\n    \n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    async loadBlockChain(){\n        const web3 = window.web3\n        const accounts = await web3.eth.getAccounts()\n        this.setState({ account: accounts[0] })\n        const networkId = await web3.eth.net.getId()\n        const networkData = Election.networks[networkId]\n        if(networkData) {\n            const election = new web3.eth.Contract(Election.abi, networkData.address)\n            this.setState({ election })\n        } else {\n            window.alert('Election contract not deployed to detected network.')\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.addCandidates();\n    }\n    \n    addCandidates() {\n        console.log(this.state);\n        this.setState({ loading: true })\n        this.state.election.methods.addCandidate(this.state.candidate_name, this.state.candidate_details, this.state.id).send({ from: this.state.account })\n        .once('receipt', (receipt) => {\n            console.log(receipt);\n          this.setState({ loading: false })\n          window.location.assign(\"/elections\");\n        })\n    }\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n          account: '',\n          election: null,\n          candidate_name: null,\n          candidate_details: null,\n          id: null\n        }\n        this.addCandidates = this.addCandidates.bind(this)\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id;\n        this.setState({\n            id: id,\n        })\n    }\n\n    render(){\n        return(\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  <h1 class=\"login-title\">Add New Candidate</h1>\n            {/* <div className=\"container\" style={divStyle}> */}\n                <form onSubmit={this.handleSubmit}>\n                <label htmlFor=\"name\" >Candidate Name</label><br></br>\n                    <input type=\"text\" id=\"candidate_name\" name=\"candidate_name\" placeholder=\"Name\" onChange={this.handleInputChange} required/>\n                    <br />\n                    <label htmlFor=\"name\">Candidate details</label>\n                    <br />\n                    <input type=\"text\" id=\"candidate_details\" name=\"candidate_details\" placeholder=\"Party Name\" onChange={this.handleInputChange} required/>\n                    <br />\n                    <br />\n                    <button  class=\"btn btn-warning \" type=\"submit\" name=\"action\">Submit\n\n                    </button>\n                </form>\n                        </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default NewCandidate;\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            'username': null,\n            'password': null\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, password } = this.state;\n        console.log(username);\n        console.log(password);\n        // axios.post('http://localhost:8000/api/adminLogin', {\n        //     username: username,\n        //     password: password,\n        // })\n        // .then(function(response){ \n        //     if(response.data){\n        //         window.location.assign(\"/newelection\")\n        //     }else{\n        //         alert('Incorrect Username or Password');\n        //     }\n        // })\n        // .catch(function(err){\n        //     console.error(err);\n        // });\n        if(username ==\"Lakshit\" && password ==\"Lakshit\"){\n            window.location.assign(\"/adminPannel\");\n        }\n\n        else{\n            alert('Incorrect username and password');\n        }\n    }\n\n\n    render(){\n        return(\n\n        <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-sm-6 login-section-wrapper\">\n                        <div class=\"login-wrapper my-auto\">\n                            <h1 class=\"login-title\">Log in</h1>\n                            <form onSubmit={this.handleSubmit}>\n              <div class=\"form-group\">\n                <label htmlFor=\"name\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Enter Username\" onChange={this.handleInputChange}required />\n              </div>\n              <div class=\"form-group mb-4\">\n                <label htmlFor=\"name\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" placeholder=\" Enter Password\"  onChange={this.handleInputChange}required />\n              </div>\n               <button class=\"btn btn-warning \" type=\"submit\" name=\"action\">Login</button>\n            </form>\n          </div>\n        </div>\n                <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n                </div>\n       </div>\n      </div>\n        )\n\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\n\n\n\nclass AdminPannel extends Component {\n    render(){\n\n        return (\n\n            <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-sm-6 login-section-wrapper\">\n\n                <div class=\"login-wrapper my-auto\">\n                  {/* <h1 class=\"login-title\"></h1> */}\n                  <ul>\n                  <Link to={\"/newElection\"} className=\"title\" ><button  class=\"btn btn-warning btn-lg \">Add New Election</button></Link>\n                  <br />\n                  <br />\n                  <Link to={\"/elections\"} className=\"title\" ><button  class=\"btn btn-warning btn-lg\">Election List</button></Link>\n\n                  {/* <li className=\"collection-item\" ><h4 >Add New Election       <Link to=\"/newElection\" className=\"secondary-content\"><i className=\"material-icons\">send</i></Link></h4></li>\n                  <li className=\"collection-item\" ><h4 >Election List                <Link to=\"/elections\" className=\"secondary-content\"><i className=\"material-icons\">send</i></Link></h4></li> */}\n\n                  </ul>\n                </div>\n              </div>\n              <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n                <img src=\"login.jpg\" alt=\"login image\" class=\"login-img\"/>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default AdminPannel;","import React, { Component } from 'react';\nimport NewElection from './components/custom/NewElection';\nimport NavBar from './components/custom/Navbar';\nimport Home from './components/custom/Home';\nimport Vote from './components/custom/Vote';\nimport About from './components/custom/About';\nimport VoteCount from './components/custom/VoteCount';\nimport ElectionData from './components/custom/ElectionData';\nimport Choose from './components/custom/Choose';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport NewCandidate from './components/custom/NewCandidate';\nimport Login from './components/custom/Login';\nimport AdminPannel from './components/custom/AdminPannel';\n\nclass App extends Component {\n\n    getVal = () => {\n        console.log('Test!')\n    }\n\n    render(){\n        return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <NavBar getVal={this.getVal}/>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/NewElection\" component={NewElection} />\n                <Route exact path=\"/About\" component={About} />\n                <Route exact path=\"/elections\" component={ElectionData} />\n                <Route exact path=\"/candidates/:id\" component={NewCandidate} />\n                <Route exact path=\"/vote/:id\" component={Vote} />\n                <Route exact path=\"/choose\" component={Choose} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/voteCount/:id\" component={VoteCount}/>\n                <Route exact path=\"/adminPannel\" component={AdminPannel}/>\n            </div>\n        </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}